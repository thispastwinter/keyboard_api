[
    {
        "label": "Literal",
        "importPath": "typing_extensions",
        "description": "typing_extensions",
        "isExtraImport": true,
        "detail": "typing_extensions",
        "documentation": {}
    },
    {
        "label": "TypedDict",
        "importPath": "typing_extensions",
        "description": "typing_extensions",
        "isExtraImport": true,
        "detail": "typing_extensions",
        "documentation": {}
    },
    {
        "label": "TypedDict",
        "importPath": "typing_extensions",
        "description": "typing_extensions",
        "isExtraImport": true,
        "detail": "typing_extensions",
        "documentation": {}
    },
    {
        "label": "TypeVar",
        "importPath": "typing_extensions",
        "description": "typing_extensions",
        "isExtraImport": true,
        "detail": "typing_extensions",
        "documentation": {}
    },
    {
        "label": "Self",
        "importPath": "typing_extensions",
        "description": "typing_extensions",
        "isExtraImport": true,
        "detail": "typing_extensions",
        "documentation": {}
    },
    {
        "label": "Literal",
        "importPath": "typing_extensions",
        "description": "typing_extensions",
        "isExtraImport": true,
        "detail": "typing_extensions",
        "documentation": {}
    },
    {
        "label": "TypedDict",
        "importPath": "typing_extensions",
        "description": "typing_extensions",
        "isExtraImport": true,
        "detail": "typing_extensions",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Generic",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Generic",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TypeVar",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Callable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Switch",
        "importPath": "app.models.switch",
        "description": "app.models.switch",
        "isExtraImport": true,
        "detail": "app.models.switch",
        "documentation": {}
    },
    {
        "label": "Switch",
        "importPath": "app.models.switch",
        "description": "app.models.switch",
        "isExtraImport": true,
        "detail": "app.models.switch",
        "documentation": {}
    },
    {
        "label": "Switch",
        "importPath": "app.models.switch",
        "description": "app.models.switch",
        "isExtraImport": true,
        "detail": "app.models.switch",
        "documentation": {}
    },
    {
        "label": "KeyCap",
        "importPath": "app.models.keycap",
        "description": "app.models.keycap",
        "isExtraImport": true,
        "detail": "app.models.keycap",
        "documentation": {}
    },
    {
        "label": "KeyCap",
        "importPath": "app.models.keycap",
        "description": "app.models.keycap",
        "isExtraImport": true,
        "detail": "app.models.keycap",
        "documentation": {}
    },
    {
        "label": "KeyCap",
        "importPath": "app.models.keycap",
        "description": "app.models.keycap",
        "isExtraImport": true,
        "detail": "app.models.keycap",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "FastAPI",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIResponse",
        "importPath": "app.models.response",
        "description": "app.models.response",
        "isExtraImport": true,
        "detail": "app.models.response",
        "documentation": {}
    },
    {
        "label": "APIResponse",
        "importPath": "app.models.response",
        "description": "app.models.response",
        "isExtraImport": true,
        "detail": "app.models.response",
        "documentation": {}
    },
    {
        "label": "APIResponse",
        "importPath": "app.models.response",
        "description": "app.models.response",
        "isExtraImport": true,
        "detail": "app.models.response",
        "documentation": {}
    },
    {
        "label": "Keyboard",
        "importPath": "app.models.keyboard",
        "description": "app.models.keyboard",
        "isExtraImport": true,
        "detail": "app.models.keyboard",
        "documentation": {}
    },
    {
        "label": "Keyboard",
        "importPath": "app.models.keyboard",
        "description": "app.models.keyboard",
        "isExtraImport": true,
        "detail": "app.models.keyboard",
        "documentation": {}
    },
    {
        "label": "KeyboardService",
        "importPath": "app.services.keyboard_service",
        "description": "app.services.keyboard_service",
        "isExtraImport": true,
        "detail": "app.services.keyboard_service",
        "documentation": {}
    },
    {
        "label": "KeyCapService",
        "importPath": "app.services.keycap_service",
        "description": "app.services.keycap_service",
        "isExtraImport": true,
        "detail": "app.services.keycap_service",
        "documentation": {}
    },
    {
        "label": "SwitchService",
        "importPath": "app.services.switch_service",
        "description": "app.services.switch_service",
        "isExtraImport": true,
        "detail": "app.services.switch_service",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "BuildData",
        "importPath": "app.services.build_data",
        "description": "app.services.build_data",
        "isExtraImport": true,
        "detail": "app.services.build_data",
        "documentation": {}
    },
    {
        "label": "BuildData",
        "importPath": "app.services.build_data",
        "description": "app.services.build_data",
        "isExtraImport": true,
        "detail": "app.services.build_data",
        "documentation": {}
    },
    {
        "label": "BuildData",
        "importPath": "app.services.build_data",
        "description": "app.services.build_data",
        "isExtraImport": true,
        "detail": "app.services.build_data",
        "documentation": {}
    },
    {
        "label": "CORSMiddleware",
        "importPath": "fastapi.middleware.cors",
        "description": "fastapi.middleware.cors",
        "isExtraImport": true,
        "detail": "fastapi.middleware.cors",
        "documentation": {}
    },
    {
        "label": "RedirectResponse",
        "importPath": "fastapi.responses",
        "description": "fastapi.responses",
        "isExtraImport": true,
        "detail": "fastapi.responses",
        "documentation": {}
    },
    {
        "label": "keyboards_router",
        "importPath": "app.routers.keyboard_router",
        "description": "app.routers.keyboard_router",
        "isExtraImport": true,
        "detail": "app.routers.keyboard_router",
        "documentation": {}
    },
    {
        "label": "keycaps_router",
        "importPath": "app.routers.keycap_router",
        "description": "app.routers.keycap_router",
        "isExtraImport": true,
        "detail": "app.routers.keycap_router",
        "documentation": {}
    },
    {
        "label": "switches_router",
        "importPath": "app.routers.switch_router",
        "description": "app.routers.switch_router",
        "isExtraImport": true,
        "detail": "app.routers.switch_router",
        "documentation": {}
    },
    {
        "label": "Keyboard",
        "kind": 6,
        "importPath": "app.models.keyboard",
        "description": "app.models.keyboard",
        "peekOfCode": "class Keyboard(TypedDict):\n    id: str\n    name: str\n    brand_name: str\n    layout: KeyboardLayout\n    color_way: List[str]\n    led: bool\n    hot_swap: bool\n    price: float\n    num_of_pins: Literal[3, 5]",
        "detail": "app.models.keyboard",
        "documentation": {}
    },
    {
        "label": "KeyboardLayout",
        "kind": 5,
        "importPath": "app.models.keyboard",
        "description": "app.models.keyboard",
        "peekOfCode": "KeyboardLayout = Literal[\n    \"ANSI\",\n    \"ISO\",\n    \"TKL\",\n    \"75%\",\n    \"60%\",\n    \"40%\",\n    \"Split\",\n    \"Ortholinear\",\n    \"ErgoDox\",",
        "detail": "app.models.keyboard",
        "documentation": {}
    },
    {
        "label": "KeyCap",
        "kind": 6,
        "importPath": "app.models.keycap",
        "description": "app.models.keycap",
        "peekOfCode": "class KeyCap(TypedDict):\n    id: str\n    name: str\n    brand_name: str  \n    material: str",
        "detail": "app.models.keycap",
        "documentation": {}
    },
    {
        "label": "Meta",
        "kind": 6,
        "importPath": "app.models.response",
        "description": "app.models.response",
        "peekOfCode": "class Meta(BaseModel):\n    date: str\n    status_code: int\n    message: str | None\nclass APIResponse(BaseModel, Generic[T]):\n    data: T\n    meta: Meta\n    @classmethod\n    def create(\n        cls,",
        "detail": "app.models.response",
        "documentation": {}
    },
    {
        "label": "APIResponse",
        "kind": 6,
        "importPath": "app.models.response",
        "description": "app.models.response",
        "peekOfCode": "class APIResponse(BaseModel, Generic[T]):\n    data: T\n    meta: Meta\n    @classmethod\n    def create(\n        cls,\n        data: T,\n        status_code: int | None = None,\n        date: str | None = None,\n        message: str | None = None,",
        "detail": "app.models.response",
        "documentation": {}
    },
    {
        "label": "T",
        "kind": 5,
        "importPath": "app.models.response",
        "description": "app.models.response",
        "peekOfCode": "T = TypeVar(\"T\")\nclass Meta(BaseModel):\n    date: str\n    status_code: int\n    message: str | None\nclass APIResponse(BaseModel, Generic[T]):\n    data: T\n    meta: Meta\n    @classmethod\n    def create(",
        "detail": "app.models.response",
        "documentation": {}
    },
    {
        "label": "Switch",
        "kind": 6,
        "importPath": "app.models.switch",
        "description": "app.models.switch",
        "peekOfCode": "class Switch(TypedDict):\n    id: str\n    name: str\n    brand_name: str\n    bottom_force: str\n    total_travel: str\n    pre_travel: str\n    initial_force: str\n    num_of_pins: Literal[3, 5]\n    led_direction: Literal[\"north\", \"south\"]",
        "detail": "app.models.switch",
        "documentation": {}
    },
    {
        "label": "keyboards_router",
        "kind": 5,
        "importPath": "app.routers.keyboard_router",
        "description": "app.routers.keyboard_router",
        "peekOfCode": "keyboards_router = APIRouter(\n    tags=[\"Keyboards\"],\n    prefix=\"/keyboards\",\n)\n@keyboards_router.get(\"\", response_model=APIResponse[List[Keyboard]])\nasync def get_keyboards():\n    try:\n        data = KeyboardService.get_all()\n        return APIResponse.create(data=data)\n    except Exception as e:",
        "detail": "app.routers.keyboard_router",
        "documentation": {}
    },
    {
        "label": "keycaps_router",
        "kind": 5,
        "importPath": "app.routers.keycap_router",
        "description": "app.routers.keycap_router",
        "peekOfCode": "keycaps_router = APIRouter(\n    tags=[\"Keycaps\"],\n    prefix=\"/keycaps\",\n)\n@keycaps_router.get(\"\", response_model=APIResponse[List[KeyCap]])\nasync def get_keycaps() -> APIResponse[List[KeyCap]]:\n    try:\n        data = KeyCapService.get_all()\n        return APIResponse.create(data=data)\n    except Exception as e:",
        "detail": "app.routers.keycap_router",
        "documentation": {}
    },
    {
        "label": "switches_router",
        "kind": 5,
        "importPath": "app.routers.switch_router",
        "description": "app.routers.switch_router",
        "peekOfCode": "switches_router = APIRouter(\n    tags=[\"Switches\"],\n    prefix=\"/switches\",\n)\n@switches_router.get(\"\", response_model=APIResponse[List[Switch]])\nasync def get_switches():\n    try:\n        data = SwitchService.get_all()\n        return APIResponse.create(data=data)\n    except Exception as e:",
        "detail": "app.routers.switch_router",
        "documentation": {}
    },
    {
        "label": "BuildData",
        "kind": 6,
        "importPath": "app.services.build_data",
        "description": "app.services.build_data",
        "peekOfCode": "class BuildData(BaseModel, Generic[T], ABC):\n    @abstractmethod\n    def get_all(cls) -> List[T]:\n        pass\n    @abstractmethod\n    def get_one(cls, id: str) -> T:\n        pass",
        "detail": "app.services.build_data",
        "documentation": {}
    },
    {
        "label": "T",
        "kind": 5,
        "importPath": "app.services.build_data",
        "description": "app.services.build_data",
        "peekOfCode": "T = TypeVar(\"T\")\nclass BuildData(BaseModel, Generic[T], ABC):\n    @abstractmethod\n    def get_all(cls) -> List[T]:\n        pass\n    @abstractmethod\n    def get_one(cls, id: str) -> T:\n        pass",
        "detail": "app.services.build_data",
        "documentation": {}
    },
    {
        "label": "KeyboardService",
        "kind": 6,
        "importPath": "app.services.keyboard_service",
        "description": "app.services.keyboard_service",
        "peekOfCode": "class KeyboardService(BuildData[Keyboard]):\n    @classmethod\n    def get_all(cls) -> List[Keyboard]:\n        return keyboards\n    @classmethod\n    def get_one(cls, id: str) -> Keyboard:\n        return Keyboard(\n            id=id,\n            brand_name=\"A Keyboard Brand\",\n            color_way=[\"yello\", \"green\"],",
        "detail": "app.services.keyboard_service",
        "documentation": {}
    },
    {
        "label": "KeyCapService",
        "kind": 6,
        "importPath": "app.services.keycap_service",
        "description": "app.services.keycap_service",
        "peekOfCode": "class KeyCapService(BuildData[KeyCap]):\n    @classmethod\n    def get_all(cls) -> List[KeyCap]:\n        return keycaps\n    @classmethod\n    def get_one(cls, id: str) -> KeyCap:\n        return KeyCap(\n            id=id,\n            name=\"Classic Black\",\n            brand_name=\"XYZ Keyboards\",",
        "detail": "app.services.keycap_service",
        "documentation": {}
    },
    {
        "label": "SwitchService",
        "kind": 6,
        "importPath": "app.services.switch_service",
        "description": "app.services.switch_service",
        "peekOfCode": "class SwitchService(BuildData[Switch]):\n    @classmethod\n    def get_all(cls) -> List[Switch]:\n        return switches\n    @classmethod\n    def get_one(cls, id: str) -> Switch:\n        return Switch(\n            id=id,\n            name=\"Red Switch\",\n            brand_name=\"XYZ Switches\",",
        "detail": "app.services.switch_service",
        "documentation": {}
    },
    {
        "label": "app_docs_redirect",
        "kind": 2,
        "importPath": "app.main",
        "description": "app.main",
        "peekOfCode": "def app_docs_redirect():\n    return RedirectResponse(url=\"/api/v1/docs\")\napp.include_router(keyboards_router)\napp.include_router(keycaps_router)\napp.include_router(switches_router)\napp.mount(path=\"/api/v1\", app=app)",
        "detail": "app.main",
        "documentation": {}
    },
    {
        "label": "origins",
        "kind": 5,
        "importPath": "app.main",
        "description": "app.main",
        "peekOfCode": "origins = [\n    \"http://localhost:3000\",\n]\napp = FastAPI()\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=origins,\n    allow_credentials=True,\n    allow_methods=[\"*\"],\n    allow_headers=[\"*\"],",
        "detail": "app.main",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "app.main",
        "description": "app.main",
        "peekOfCode": "app = FastAPI()\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=origins,\n    allow_credentials=True,\n    allow_methods=[\"*\"],\n    allow_headers=[\"*\"],\n)\n@app.get(\"/\", include_in_schema=False)\ndef app_docs_redirect():",
        "detail": "app.main",
        "documentation": {}
    }
]