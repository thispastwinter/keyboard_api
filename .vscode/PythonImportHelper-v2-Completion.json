[
    {
        "label": "Literal",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Generic",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TypeVar",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Literal",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "Switch",
        "importPath": "app.models.switch",
        "description": "app.models.switch",
        "isExtraImport": true,
        "detail": "app.models.switch",
        "documentation": {}
    },
    {
        "label": "GenericModel",
        "importPath": "pydantic.generics",
        "description": "pydantic.generics",
        "isExtraImport": true,
        "detail": "pydantic.generics",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "FastAPI",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIResponse",
        "importPath": "app.models.response",
        "description": "app.models.response",
        "isExtraImport": true,
        "detail": "app.models.response",
        "documentation": {}
    },
    {
        "label": "Keyboard",
        "importPath": "app.models.keyboard",
        "description": "app.models.keyboard",
        "isExtraImport": true,
        "detail": "app.models.keyboard",
        "documentation": {}
    },
    {
        "label": "CORSMiddleware",
        "importPath": "fastapi.middleware.cors",
        "description": "fastapi.middleware.cors",
        "isExtraImport": true,
        "detail": "fastapi.middleware.cors",
        "documentation": {}
    },
    {
        "label": "RedirectResponse",
        "importPath": "starlette.responses",
        "description": "starlette.responses",
        "isExtraImport": true,
        "detail": "starlette.responses",
        "documentation": {}
    },
    {
        "label": "keyboards_router",
        "importPath": "app.routers.keyboards",
        "description": "app.routers.keyboards",
        "isExtraImport": true,
        "detail": "app.routers.keyboards",
        "documentation": {}
    },
    {
        "label": "Keyboard",
        "kind": 6,
        "importPath": "app.models.keyboard",
        "description": "app.models.keyboard",
        "peekOfCode": "class Keyboard(BaseModel):\n    id: str\n    layout: KeyboardLayout\n    color_way: List[str]\n    led: bool\n    hot_swap: bool\n    price: float\n    num_of_pins: Literal[3, 5]\n    switch: Switch",
        "detail": "app.models.keyboard",
        "documentation": {}
    },
    {
        "label": "KeyboardLayout",
        "kind": 5,
        "importPath": "app.models.keyboard",
        "description": "app.models.keyboard",
        "peekOfCode": "KeyboardLayout = Literal[\n    \"ANSI\",\n    \"ISO\",\n    \"TKL\",\n    \"75%\",\n    \"60%\",\n    \"40%\",\n    \"Split\",\n    \"Ortholinear\",\n    \"ErgoDox\",",
        "detail": "app.models.keyboard",
        "documentation": {}
    },
    {
        "label": "Meta",
        "kind": 6,
        "importPath": "app.models.response",
        "description": "app.models.response",
        "peekOfCode": "class Meta(BaseModel):\n    date: str\n    status_code: int\n    message: str | None\nclass APIResponse(GenericModel, Generic[T]):\n    data: T\n    meta: Meta\n    @classmethod\n    def create(\n        cls,",
        "detail": "app.models.response",
        "documentation": {}
    },
    {
        "label": "APIResponse",
        "kind": 6,
        "importPath": "app.models.response",
        "description": "app.models.response",
        "peekOfCode": "class APIResponse(GenericModel, Generic[T]):\n    data: T\n    meta: Meta\n    @classmethod\n    def create(\n        cls,\n        data: T,\n        status_code: str | None = None,\n        date: str | None = None,\n        message: str | None = None,",
        "detail": "app.models.response",
        "documentation": {}
    },
    {
        "label": "ISO_8601",
        "kind": 5,
        "importPath": "app.models.response",
        "description": "app.models.response",
        "peekOfCode": "ISO_8601 = \"YYYY-MM-DDTHH:MM:SS.mmmmmm\"\nT = TypeVar(\"T\")\nclass Meta(BaseModel):\n    date: str\n    status_code: int\n    message: str | None\nclass APIResponse(GenericModel, Generic[T]):\n    data: T\n    meta: Meta\n    @classmethod",
        "detail": "app.models.response",
        "documentation": {}
    },
    {
        "label": "T",
        "kind": 5,
        "importPath": "app.models.response",
        "description": "app.models.response",
        "peekOfCode": "T = TypeVar(\"T\")\nclass Meta(BaseModel):\n    date: str\n    status_code: int\n    message: str | None\nclass APIResponse(GenericModel, Generic[T]):\n    data: T\n    meta: Meta\n    @classmethod\n    def create(",
        "detail": "app.models.response",
        "documentation": {}
    },
    {
        "label": "Switch",
        "kind": 6,
        "importPath": "app.models.switch",
        "description": "app.models.switch",
        "peekOfCode": "class Switch(BaseModel):\n    id: str\n    bottom_force: str\n    total_travel: str\n    pre_travel: str\n    initial_force: str\n    num_of_pins: Literal[3, 5]\n    led_direction: Literal[\"north\", \"south\"]\n    type: Literal[\"clicky\", \"tactile\", \"linear\"]",
        "detail": "app.models.switch",
        "documentation": {}
    },
    {
        "label": "keyboards_router",
        "kind": 5,
        "importPath": "app.routers.keyboards",
        "description": "app.routers.keyboards",
        "peekOfCode": "keyboards_router = APIRouter(\n    tags=[\"Keyboards\"],\n    prefix=\"/keyboards\",\n)\n@keyboards_router.get(\"\", response_model=APIResponse[List[Keyboard]])\nasync def keyboards():\n    try:\n        return APIResponse.create(data=[])\n    except Exception as e:\n        print(e, flush=True)",
        "detail": "app.routers.keyboards",
        "documentation": {}
    },
    {
        "label": "app_docs_redirect",
        "kind": 2,
        "importPath": "app.main",
        "description": "app.main",
        "peekOfCode": "def app_docs_redirect():\n    return RedirectResponse(url=\"/api/v1/docs\")\napp.include_router(keyboards_router)\napp.mount(path=\"/api/v1\", app=app)",
        "detail": "app.main",
        "documentation": {}
    },
    {
        "label": "origins",
        "kind": 5,
        "importPath": "app.main",
        "description": "app.main",
        "peekOfCode": "origins = [\n    \"http://localhost:3000\",\n]\napp = FastAPI()\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=origins,\n    allow_credentials=True,\n    allow_methods=[\"*\"],\n    allow_headers=[\"*\"],",
        "detail": "app.main",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "app.main",
        "description": "app.main",
        "peekOfCode": "app = FastAPI()\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=origins,\n    allow_credentials=True,\n    allow_methods=[\"*\"],\n    allow_headers=[\"*\"],\n)\n@app.get(\"/\", include_in_schema=False)\ndef app_docs_redirect():",
        "detail": "app.main",
        "documentation": {}
    }
]